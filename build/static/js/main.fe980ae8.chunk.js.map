{"version":3,"sources":["components/header/navbar/NavbarHeader.tsx","components/header/logo/LogoHeader.tsx","components/header/AppHeader.tsx","pages/home/title/Title.tsx","pages/home/Home.tsx","pages/colorizer/search-field/ColorizerSearchField.tsx","pages/colorizer/list/ColorizerList.tsx","pages/colorizer/Colorizer.tsx","pages/PagesRouter.tsx","reducers/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["NavbarHeader","react_default","a","createElement","style","display","className","Link","to","React","Component","LogoHeader","width","color","Header","Layout","AppHeader","LogoHeader_LogoHeader","NavbarHeader_NavbarHeader","Title","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_onMouseMove","e","refs","titleContainer","clientWidth","height","clientHeight","ox","nativeEvent","offsetX","oy","offsetY","console","log","setState","x","y","_onMouseOut","state","mask","--maskX","--maskY","onMouseMove","onMouseOut","ref","Home","row","col","Title_Title","ColorizerSearchField","react","input","connect","ColorizerList","Colorizer","marginBottom","type","align","justify","gutter","search_field_ColorizerSearchField","es_button","xs","md","lg","list_ColorizerList","PagesRouter","Route","exact","path","component","combineReducers","store","createStore","rootReducer","App","es","BrowserRouter","header_AppHeader","PagesRouter_PagesRouter","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fe980ae8.chunk.js","sourcesContent":["import React from 'react';\nimport './NavbarHeader.scss';\nimport { Link } from 'react-router-dom';\n\nexport default class NavbarHeader extends React.Component {\n  public render() {\n    return (\n      <nav style={{ display: 'inline' }} className={'nav-bar-header'}>\n        <Link className=\"menu-item\" to={'/home'}>\n          home\n        </Link>\n        <Link className=\"menu-item\" to={'/colorizer'}>\n          colorizer\n        </Link>\n      </nav>\n    );\n  }\n}\n","import React from 'react';\n\nexport const LogoHeader = () => {\n  return (\n    <div style={{ width: '100px', display: 'inline', color: '#fff' }}>Logo</div>\n  );\n};\n","import React from 'react';\nimport NavbarHeader from './navbar/NavbarHeader';\nimport { LogoHeader } from './logo/LogoHeader';\nimport { Layout } from 'antd';\n\nconst { Header } = Layout;\n\nclass AppHeader extends React.Component {\n  render() {\n    return (\n      <Header>\n        <LogoHeader />\n        <NavbarHeader />\n      </Header>\n    );\n  }\n}\n\nexport default AppHeader;\n","import React, { Component, SyntheticEvent } from 'react'\nimport './Title.scss';\n\n\ninterface TitleState{\n  x: number;\n  y: number\n}\n\nexport default class Title extends Component<{}, TitleState>{\n    constructor(props:any) {\n        super(props);\n        this.state={\n            x:0,\n            y:0\n        }\n    }\n    \n    _onMouseMove=(e:SyntheticEvent)=>{\n        //@ts-ignore\n        const width = this.refs.titleContainer.clientWidth;\n         //@ts-ignore\n        const height = this.refs.titleContainer.clientHeight;\n        //@ts-ignore\n        const ox = (e.nativeEvent.offsetX/width)* 100;\n        //@ts-ignore\n        const oy = (e.nativeEvent.offsetY/width)* 100;\n\n        console.log(width,height)\n        console.log(e.nativeEvent)\n\n        this.setState({\n            x: ox,\n            y: oy\n        })\n    }  \n    \n    \n    _onMouseOut=()=>{\n      this.setState({\n        x:0,\n        y:0\n      })\n    }\n  render() {\n    const mask: { '--maskX': number; '--maskY':number} = {\n        '--maskX':this.state.x,\n        '--maskY':this.state.y\n    }\n\n    return (\n      <div className=\"title-container\"\n            onMouseMove={this._onMouseMove}\n            onMouseOut={this._onMouseOut}\n            ref=\"titleContainer\"\n            // @ts-ignore\n            style={mask}\n      >\n          <div className=\"title-wrapper\">\n            <h1>NDREW</h1>\n          </div>\n          <div className=\"title-wrapper\">\n                <h1>NDREW</h1>\n          </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './Home.scss';\nimport { Row, Col } from 'antd';\nimport Title from './title/Title';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <section className={'home'}>\n        <Row>\n          <Col>\n            <Title/>\n          </Col>\n        </Row>\n      </section>\n    );\n  }\n}\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { Input } from 'antd';\n\ninterface ColorizerSearchFieldProps {};\n\ninterface ColorizerSearchFieldState {};\n\nclass ColorizerSearchField extends React.Component<ColorizerSearchFieldProps, ColorizerSearchFieldState> {\n    public render(): JSX.Element {\n        return (\n            <Input/>\n        );\n    }\n}\n\nexport default connect()(ColorizerSearchField);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { List } from 'antd';\n// import { ColorizerItem } from './list-item/ColorizerListItem';\n\ninterface ColorizerListProps {};\n\ninterface ColorizerListState {};\n\n\nclass ColorizerList extends React.Component<ColorizerListProps, ColorizerListState> {\n    public render(): JSX.Element {\n        return (\n           <div>hello</div>\n        );\n    }\n}\n\nexport default connect()(ColorizerList);\n","import * as React from 'react';\nimport ColorizerSearchField from './search-field/ColorizerSearchField';\nimport './Colorizer.scss';\nimport { Row, Col, Button } from 'antd';\nimport ColorizerList from './list/ColorizerList';\n\nexport interface ColorizerProps {}\n\nexport interface ColorizerState {}\n\nexport default class Colorizer extends React.Component<\n  ColorizerProps,\n  ColorizerState\n> {\n  constructor(props: ColorizerProps) {\n    super(props);\n    this.state = {};\n  }\n\n  public render() {\n    return (\n    <section className={'colorizer'}>\n      <Row style={{marginBottom:'24px'}} type={'flex'} align={'middle'} justify='center' gutter={16}>\n        <Col>\n          <ColorizerSearchField/>\n        </Col>\n        <Col>\n          <Button>Add</Button>\n        </Col>\n      </Row>\n      <Row type={'flex'} align={'middle'} justify='center' gutter={16}>\n        <Col xs={24} md={20} lg={16}>\n          <ColorizerList/>\n        </Col>\n    \n      </Row>\n\n    </section>\n    )\n  }\n}\n","import * as React from 'react';\nimport { Route } from 'react-router';\nimport Home from './home/Home';\nimport Colorizer from './colorizer/Colorizer';\n\nexport const PagesRouter: React.SFC = () => {\n  return (\n    <React.Fragment>\n      <Route exact={true} path=\"/home\" component={Home} />\n      <Route exact={true} path=\"/colorizer\" component={Colorizer} />\n    </React.Fragment>\n  );\n};\n","import { combineReducers } from 'redux'\n\nexport default combineReducers({\n\n})","import React, { Component } from 'react';\nimport './App.scss';\nimport AppHeader from './components/header/AppHeader';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { PagesRouter } from './pages/PagesRouter';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducers';\nimport { createStore } from 'redux';\n\nconst store = createStore(rootReducer);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <AppHeader />\n            <PagesRouter />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}